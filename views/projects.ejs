<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Projects List | Pythagora Lab</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="/public/styles/styles.css">
    <style>
        thead th {
            position: sticky;
            top: 0;
            background: white;
            z-index: 100;
        }
        .project-states-container {
            height: calc(100vh - 150px); /* Adjust based on actual header and form heights */
            overflow-y: scroll;
        }
        /* Full width for the details section */
        .details-container {
            width: 100%;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <form method="GET" action="/projects">
            <div class="row">
                <div class="col-md-6">
                    <h3>Projects</h3>
                    <select class="custom-select mb-3" name="projectId" id="projectSelect">
                        <option selected>Select a project</option>
                        <% projects.forEach(project => { %>
                            <option value="<%= project.id %>" <%= selectedProjectId === project.id ? 'selected' : '' %>><%= project.name %></option>
                        <% }); %>
                    </select>
                </div>
                <% if (branches && branches.length > 0) { %>
                    <div class="col-md-6">
                        <h3>Branches</h3>
                        <select class="custom-select mb-3" name="branchId" id="branchSelect">
                            <option selected>Select a branch</option>
                            <% branches.forEach(branch => { %>
                                <option value="<%= branch.id %>" <%= selectedBranchId === branch.id ? 'selected' : '' %>><%= branch.name %></order>
                            <% }); %>
                        </select>
                    </div>
                <% } %>
            </div>

            <!-- Collapsible Filter Section -->
            <div id="filterContainer" class="collapse">
                <div class="row mt-3">
                    <div class="col form-group">
                        <input type="text" class="form-control" id="epicSearch" name="epic" placeholder="Epic description" value="<%= epic %>">
                    </div>
                    <div class="col form-group">
                        <input type="text" class="form-control" id="taskSearch" name="task" placeholder="Task description" value="<%= task %>">
                    </div>
                    <div class="col form-group">
                        <input type="text" class="form-control" id="iterationSearch" name="iteration" placeholder="Iteration" value="<%= iteration %>">
                    </div>
                    <div class="col form-group">
                        <input type="text" class="form-control" id="requestSearch" name="llm_request" placeholder="LLM request" value="<%= llm_request %>">
                    </div>
                    <div class="col form-group">
                        <input type="text" class="form-control" id="agentSearch" name="agent" placeholder="Agent" value="<%= agent %>">
                    </div>
                </div>
            </div>

            <!-- Filter Toggle and Submit Button -->
            <div class="row mt-3 mb-3">
                <div class="col">
                    <button type="button" class="btn btn-secondary" data-toggle="collapse" data-target="#filterContainer">Toggle Filters</button>
                    <button type="submit" class="btn btn-primary">Apply Filters</button>
                </div>
            </div>
        </form>

        <% if (projectStates && projectStates.length > 0) { %>
            <h3>Project States</h3>
            <div class="project-states-container">
                <table id="projectTable" class="table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Epic</th>
                            <th>Task</th>
                            <th>Step</th>
                            <th>LLM requests</th>
                            <th>Prompts</th>
                            <th>Agent</th>
                            <th>Files</th>
                            <th>User inputs</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% projectStates.forEach(state => { %>
                            <tr>
                                <td><%= state.step_index %></td>
                                <td><a href="javascript:void(0)" class="detail-link" data-detail-type="epic" data-project-state-id="<%= state.id %>">
                                    <% let epics = JSON.parse(state.epics); %>
                                    <%= epics.length %>
                                </a></td>
                                <td><a href="javascript:void(0)" class="detail-link" data-detail-type="task" data-project-state-id="<%= state.id %>">
                                    <%
                                        let tasks = JSON.parse(state.tasks);
                                        let completed_tasks = tasks.filter(t => t.status === 'done');
                                    %>
                                    <%= Math.min(completed_tasks.length + 1, tasks.length) %> / <%= tasks.length %>
                                </a></td>
                                <td><a href="javascript:void(0)" class="detail-link" data-detail-type="step" data-project-state-id="<%= state.id %>">
                                    <%
                                        let steps = JSON.parse(state.steps);
                                        let completed_steps = steps.filter(t => t.completed);
                                    %>
                                    <%= Math.min(completed_steps.length + 1, steps.length) %> / <%= steps.length %>
                                </a></td>
                                <td><a href="javascript:void(0)" class="detail-link" data-detail-type="llmRequests" data-project-state-id="<%= state.id %>">
                                    <%= state.llm_request_count %>
                                </a></td>
                                <td>
                                    <% state.aggregated_prompts.forEach((p) => { %>
                                        <div><%= JSON.parse(p).template %></div>
                                    <% }); %>
                                </td>
                                <td>
                                    <% if (state.agents) state.agents.forEach((p) => { %>
                                        <div><%= p %></div>
                                    <% }); %>
                                </td>
                                <td><a href="javascript:void(0)" class="detail-link" data-detail-type="files" data-project-state-id="<%= state.id %>">
                                    <%= state.files_count %>
                                </a></td>
                                <td><a href="javascript:void(0)" class="detail-link" data-detail-type="userInputs" data-project-state-id="<%= state.id %>">
                                    <%= state.user_inputs_count %>
                                </a></td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        <% } %>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="/public/js/detailsToggle.js"></script>
    <script src="/public/js/toggleVisibility.js"></script>
    <script>
        function fetchDetails(type, id) {
            console.log(`Fetching details for ${type} with ID ${id}`);
            jQuery.ajax({
                url: `/details/${type}/${id}`,
                type: 'GET',
                success: function(data) {
                    // Assuming the server responds with an HTML snippet to be displayed
                    const detailRow = `<tr><td colspan="10">${data}</td></tr>`;
                    jQuery(`a[data-detail-type="${type}"][data-project-state-id="${id}"]`).closest('tr').after(detailRow);
                },
                error: function(error) {
                    console.error('Error fetching details:', error);
                    alert('Error fetching details. Please try again.');
                }
            });
        }
        document.addEventListener("DOMContentLoaded", function() {
            const projectSelect = document.getElementById('projectSelect');
            const branchSelect = document.getElementById('branchSelect');
            const taskSearch = document.getElementById('taskSearch');
            const epicSearch = document.getElementById('epicSearch');
            const iterationSearch = document.getElementById('iterationSearch');
            const requestSearch = document.getElementById('requestSearch');
            const agentSearch = document.getElementById('agentSearch');

            // Check if the form was already submitted
            if (!sessionStorage.getItem('formSubmitted')) {
                // Automatically submit the form if a project is already selected and no search filters are applied
                if (projectSelect && projectSelect.value !== "Select a project" &&
                    (!taskSearch.value && !epicSearch.value && !iterationSearch.value && !requestSearch.value && !agentSearch.value)) {
                    sessionStorage.setItem('formSubmitted', 'true');
                    projectSelect.form.submit();
                }

                // Automatically submit the form if a branch is already selected and no search filters are applied
                if (branchSelect && branchSelect.value !== "Select a branch" &&
                    (!taskSearch.value && !epicSearch.value && !iterationSearch.value && !requestSearch.value && !agentSearch.value)) {
                    sessionStorage.setItem('formSubmitted', 'true');
                    branchSelect.form.submit();
                }
            } else {
                // Clear the flag after the form is submitted and reloaded
                sessionStorage.removeItem('formSubmitted');
            }
        });
    </script>
</body>
</html>